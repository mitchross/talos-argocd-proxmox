apiVersion: batch/v1
kind: Job
metadata:
  name: garage-init
  namespace: garage
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 5
  template:
    metadata:
      labels:
        app: garage-init
    spec:
      restartPolicy: OnFailure
      containers:
      - name: init
        image: alpine:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          set -e

          # Install curl to download garage binary
          echo "Installing dependencies..."
          apk add --no-cache curl grep

          # Download garage binary
          echo "Downloading garage binary..."
          GARAGE_VERSION="v2.1.0"
          curl -L "https://garagehq.deuxfleurs.fr/_releases/${GARAGE_VERSION}/x86_64-unknown-linux-musl/garage" -o /usr/local/bin/garage
          chmod +x /usr/local/bin/garage

          echo "Garage version:"
          /usr/local/bin/garage --version

          echo "Waiting for Garage pods to start..."
          sleep 60

          echo "Connecting cluster nodes manually..."

          # Connect to all nodes via headless service DNS
          for i in 0 1 2; do
            echo "Connecting to garage-$i..."
            /usr/local/bin/garage -c /etc/garage-client.toml node connect garage-$i.garage-internal.garage.svc.cluster.local:3901 || true
          done

          sleep 10

          echo "Checking cluster status..."
          /usr/local/bin/garage -c /etc/garage-client.toml status

          echo "Configuring cluster layout..."

          # Get all node IDs and assign capacity to each
          for node_id in $(/usr/local/bin/garage -c /etc/garage-client.toml status | grep -oE '[0-9a-f]{16}' | head -3); do
            echo "Assigning capacity to node $node_id..."
            /usr/local/bin/garage -c /etc/garage-client.toml layout assign -z dc1 -c 10G $node_id || true
          done

          echo "Applying layout..."
          /usr/local/bin/garage -c /etc/garage-client.toml layout apply --version 1 || true

          echo "Cluster initialization complete"
          /usr/local/bin/garage -c /etc/garage-client.toml status
        env:
        - name: GARAGE_ALLOW_WORLD_READABLE_SECRETS
          value: "true"
        volumeMounts:
        - name: config
          mountPath: /etc/garage-client.toml
          subPath: garage-client.toml
        - name: secrets
          mountPath: /etc/garage/secrets
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: garage-config
      - name: secrets
        secret:
          secretName: garage-secrets
