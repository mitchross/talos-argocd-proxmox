---
apiVersion: batch/v1
kind: Job
metadata:
  name: garage-init-layout
  namespace: garage
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      serviceAccountName: garage-init
      restartPolicy: OnFailure
      containers:
        - name: init-layout
          image: bitnami/kubectl:latest
          command:
            - /bin/bash
            - -c
            - |
              set -e
              echo "Waiting for all garage pods to be ready..."
              kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=garage -n garage --timeout=300s
              
              # Check if layout is already applied
              CURRENT_VERSION=$(kubectl exec -n garage garage-0 -- ./garage layout show 2>/dev/null | grep "Current cluster layout version:" | awk '{print $5}')
              
              if [ "$CURRENT_VERSION" != "0" ] && [ -n "$CURRENT_VERSION" ]; then
                echo "✅ Cluster layout already initialized (version $CURRENT_VERSION)"
                kubectl exec -n garage garage-0 -- ./garage status
                echo "✅ Garage cluster is healthy - initialization not needed"
                exit 0
              fi
              
              echo "Assigning roles to all 3 nodes..."
              for i in 0 1 2; do
                echo "Processing garage-$i..."
                ID=$(kubectl exec -n garage garage-$i -- ./garage node id -q)
                echo "  Node ID: $ID"
                kubectl exec -n garage garage-$i -- ./garage layout assign "$ID" -z home -c 100G
              done
              
              echo "Reviewing staged layout..."
              kubectl exec -n garage garage-0 -- ./garage layout show
              
              echo "Applying layout (version 1)..."
              kubectl exec -n garage garage-0 -- ./garage layout apply --version 1
              
              echo "Verifying cluster status..."
              kubectl exec -n garage garage-0 -- ./garage status
              
              echo "✅ Garage cluster initialized successfully!"
