kind: Deployment
apiVersion: apps/v1
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    spec:
      # Pod affinity to ensure all jellyfin pods stay on same node (RWO volumes requirement)
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - jellyfin
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/hostname: vanillax-ai
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 104, 1000]
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: jellyfin
          image: ghcr.io/jellyfin/jellyfin:10.11.1
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              cpu: 6000m
              memory: 6Gi
          envFrom:
            - configMapRef:
                name: jellyfin-env
          ports:
            - name: http
              containerPort: 8096
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /mnt/media
            - name: cache
              mountPath: /cache
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin-config-pvc
        - name: media
          persistentVolumeClaim:
            claimName: jellyfin-media
        - name: cache
          emptyDir: {}
