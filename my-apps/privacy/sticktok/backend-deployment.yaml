apiVersion: apps/v1
kind: Deployment
metadata:
  name: sticktock-backend
  namespace: sticktock
  labels:
    app.kubernetes.io/name: sticktock-backend
    app.kubernetes.io/component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sticktock-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sticktock-backend
        app.kubernetes.io/component: backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: ghcr.io/mitchross/sticktock/backend:latest
        workingDir: /app-workspace
        command: ["/bin/sh", "-c"]
        args:
          - |
            cd /app-workspace
            # Copy necessary files from the original app directory
            cp -r /usr/src/app/* /app-workspace/ 2>/dev/null || true
            # Ensure data directory exists
            mkdir -p /var/local/sticktock/public
            # Create symlink if it doesn't exist
            if [ ! -L public ] && [ ! -d public ]; then
              ln -sf /var/local/sticktock/public public
            fi
            # Start the application
            exec node dist/index.js
        ports:
        - name: http
          containerPort: 2000
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: sticktock-config
              key: NODE_ENV
        - name: PUBLIC_DIR
          value: "/var/local/sticktock/public"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: sticktock-data
          mountPath: /var/local/sticktock
        - name: tmp
          mountPath: /tmp
        - name: app-workspace
          mountPath: /app-workspace
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: sticktock-data
        persistentVolumeClaim:
          claimName: sticktock-data-pvc
      - name: tmp
        emptyDir: {}
      - name: app-workspace
        emptyDir: {}